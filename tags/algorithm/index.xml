<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on mtunique blog</title><link>https://example.com/tags/algorithm/</link><description>Recent content in algorithm on mtunique blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>mtunique</copyright><atom:link href="https://example.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>python实现各基本数据结构（1）——离散和线性</title><link>https://example.com/posts/python_datastruct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/posts/python_datastruct/</guid><description>离散 集合（set） Operation Average case Worst Case notes x in s O(1) O(n) Union s t O(len(s)+len(t)) Intersection s&amp;amp;t O(min(len(s), len(t)) O(len(s) * len(t)) replace &amp;ldquo;min&amp;rdquo; with &amp;ldquo;max&amp;rdquo; if t is not a set Multiple intersection s1&amp;amp;s2&amp;amp;..&amp;amp;sn (n-1)*O(l) where l is max(len(s1),..,len(sn)) Difference s-t O(len(s)) s.difference_update(t) O(len(t)) Symmetric Difference s^t O(len(s)) O(len(s) * len(t)) s.</description></item></channel></rss>