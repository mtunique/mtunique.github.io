<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on mtunique blog</title><link>https://example.com/tags/docker/</link><description>Recent content in docker on mtunique blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>mtunique</copyright><lastBuildDate>Sat, 17 Dec 2016 22:30:27 +0800</lastBuildDate><atom:link href="https://example.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker 调试技巧</title><link>https://example.com/posts/docker_debug/</link><pubDate>Sat, 17 Dec 2016 22:30:27 +0800</pubDate><guid>https://example.com/posts/docker_debug/</guid><description>『重用』容器名 但我们在编写/调试Dockerfile的时候我们经常会重复之前的command，比如这种docker run --name jstorm-zookeeper zookeeper:3.4，然后就容器名就冲突了。
$ docker run --name jstorm-zookeeper zookeeper:3.4 ... $ docker run --name jstorm-zookeeper zookeeper:3.4 docker: Error response from daemon: Conflict. The name &amp;#34;/jstorm-zookeeper&amp;#34; is already in use by container xxxxxxxxx 可以在运行 docker run 时候加上--rm flag, 容器将在退出之后销毁。无需手动docker rm CONTAINER
$ docker run --name jstorm-zookeeper zookeeper:3.4 --rm # reuse $ docker create --name jstorm-zookeeper zookeeper:3.4 $ docker start jstorm-zookeeper # no error debug Dockerfile 在写 Dockerfile 的时候，通常并不会一气呵成。有的时候容器启动就crash 直接退出，有的时候build image 就会失败，或者想验证Dockerfile是否符合预期，我们经常要debug Dockerfile。</description></item></channel></rss>